<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        ">

	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<!-- @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="com.percipient" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- View resolver -->
	<!-- Use custom xslt view resolver as the default does not allow fallback --> 
	<!--
	<bean class="org.springframework.web.servlet.view.xslt.XsltViewResolver">
		<property name="viewClass" value="com.percipient.view.XsltFoView" />
		<property name="prefix" value="/WEB-INF/xsl/" />
		<property name="suffix" value=".xsl" />
		<property name="order" value="1" />
	</bean> 
	-->
	 <bean class="com.percipient.view.MyXsltViewResolver">
		<property name="viewClass" value="com.percipient.view.XsltFoView" />
		<property name="prefix" value="/WEB-INF/xsl/" />
		<property name="suffix" value=".xsl" />
		<property name="order" value="1" />
	</bean> 
		<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
</beans>
